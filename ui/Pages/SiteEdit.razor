@page "/site-create"
@page "/site/{Host}"
@using shared.Models

@inject HttpClient Http
@inject NavigationManager Nav
@inject ToastService Toaster

<h3>Manage Site</h3>

<Card>
    <div class="mb-3">
        <label for="host">Host</label>
        <input id="host" class="form-control" @bind="Config.Host" disabled="@IsEdit" readonly="@IsEdit"/>
    </div>
    <div class="mb-3">
        <label for="description">Description</label>
        <textarea id="description" class="form-control" @bind="Config.Description"></textarea>
    </div>
    <div class="mb-3">
        <label for="default-file">Default File</label>
        <input id="default-file" class="form-control" @bind="Config.DefaultFile"/>
    </div>
    <div class="mb-3">
        <label for="storage-type">Storage Type</label>
        <select id="storage-type" class="form-control" @bind="Config.StorageType" disabled="@IsEdit" readonly="@IsEdit">
            <option value="mongo">MongoDB</option>
            <option value="s3">S3</option>
        </select>
        <span class="small text-muted">MongoDB has faster uploads (due to batching) but is limited to 16k file sizes (changing this requires an admin).</span>
    </div>
    <div class="mb-3">
        <label for="default-file">Default Cache</label>
        <input id="default-cache" class="form-control" @bind="Config.DefaultCache"/>
    </div>
    <div @onclick="Save" class="btn btn-primary">Save</div>
</Card>

@code {
    [Parameter]
    public string? Host { get; set; }

    private SiteConfig Config { get; set; } = new SiteConfig();

    private bool IsEdit => Host != null;

    protected override async Task OnInitializedAsync()
    {
        if (IsEdit)
        {
            Config = await Http.GetFromJsonAsync<SiteConfig>($"/Site/{Host}") ?? new SiteConfig();
        }
    }


    private async Task Save()
    {
        using var response = await Http.PutAsJsonAsync("/site", Config);

        try
        {
            response.EnsureSuccessStatusCode();
            Toaster.AddSuccess("Save Complete");
        }
        catch (Exception e)
        {
            Toaster.AddError(e);
        }
        
        if (!IsEdit)
        {
            Nav.NavigateTo($"/site/{Config.Host}");
        }
    }

}
